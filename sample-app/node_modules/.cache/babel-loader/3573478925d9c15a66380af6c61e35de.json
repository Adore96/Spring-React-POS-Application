{"ast":null,"code":"import $ from 'jquery';\nimport Util from './util';\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.1.1): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst ScrollSpy = ($ => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NAME = 'scrollspy';\n  const VERSION = '4.1.1';\n  const DATA_KEY = 'bs.scrollspy';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const JQUERY_NO_CONFLICT = $.fn[NAME];\n  const Default = {\n    offset: 10,\n    method: 'auto',\n    target: ''\n  };\n  const DefaultType = {\n    offset: 'number',\n    method: 'string',\n    target: '(string|element)'\n  };\n  const Event = {\n    ACTIVATE: `activate${EVENT_KEY}`,\n    SCROLL: `scroll${EVENT_KEY}`,\n    LOAD_DATA_API: `load${EVENT_KEY}${DATA_API_KEY}`\n  };\n  const ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    DROPDOWN_MENU: 'dropdown-menu',\n    ACTIVE: 'active'\n  };\n  const Selector = {\n    DATA_SPY: '[data-spy=\"scroll\"]',\n    ACTIVE: '.active',\n    NAV_LIST_GROUP: '.nav, .list-group',\n    NAV_LINKS: '.nav-link',\n    NAV_ITEMS: '.nav-item',\n    LIST_ITEMS: '.list-group-item',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_ITEMS: '.dropdown-item',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n  };\n  const OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n  };\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class ScrollSpy {\n    constructor(element, config) {\n      this._element = element;\n      this._scrollElement = element.tagName === 'BODY' ? window : element;\n      this._config = this._getConfig(config);\n      this._selector = `${this._config.target} ${Selector.NAV_LINKS},` + `${this._config.target} ${Selector.LIST_ITEMS},` + `${this._config.target} ${Selector.DROPDOWN_ITEMS}`;\n      this._offsets = [];\n      this._targets = [];\n      this._activeTarget = null;\n      this._scrollHeight = 0;\n      $(this._scrollElement).on(Event.SCROLL, event => this._process(event));\n      this.refresh();\n\n      this._process();\n    } // Getters\n\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n    static get Default() {\n      return Default;\n    } // Public\n\n\n    refresh() {\n      const autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n      const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n      const offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;\n      this._offsets = [];\n      this._targets = [];\n      this._scrollHeight = this._getScrollHeight();\n      const targets = $.makeArray($(this._selector));\n      targets.map(element => {\n        let target;\n        const targetSelector = Util.getSelectorFromElement(element);\n\n        if (targetSelector) {\n          target = $(targetSelector)[0];\n        }\n\n        if (target) {\n          const targetBCR = target.getBoundingClientRect();\n\n          if (targetBCR.width || targetBCR.height) {\n            // TODO (fat): remove sketch reliance on jQuery position/offset\n            return [$(target)[offsetMethod]().top + offsetBase, targetSelector];\n          }\n        }\n\n        return null;\n      }).filter(item => item).sort((a, b) => a[0] - b[0]).forEach(item => {\n        this._offsets.push(item[0]);\n\n        this._targets.push(item[1]);\n      });\n    }\n\n    dispose() {\n      $.removeData(this._element, DATA_KEY);\n      $(this._scrollElement).off(EVENT_KEY);\n      this._element = null;\n      this._scrollElement = null;\n      this._config = null;\n      this._selector = null;\n      this._offsets = null;\n      this._targets = null;\n      this._activeTarget = null;\n      this._scrollHeight = null;\n    } // Private\n\n\n    _getConfig(config) {\n      config = { ...Default,\n        ...(typeof config === 'object' && config ? config : {})\n      };\n\n      if (typeof config.target !== 'string') {\n        let id = $(config.target).attr('id');\n\n        if (!id) {\n          id = Util.getUID(NAME);\n          $(config.target).attr('id', id);\n        }\n\n        config.target = `#${id}`;\n      }\n\n      Util.typeCheckConfig(NAME, config, DefaultType);\n      return config;\n    }\n\n    _getScrollTop() {\n      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;\n    }\n\n    _getScrollHeight() {\n      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n\n    _getOffsetHeight() {\n      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;\n    }\n\n    _process() {\n      const scrollTop = this._getScrollTop() + this._config.offset;\n\n      const scrollHeight = this._getScrollHeight();\n\n      const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n      if (this._scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      if (scrollTop >= maxScroll) {\n        const target = this._targets[this._targets.length - 1];\n\n        if (this._activeTarget !== target) {\n          this._activate(target);\n        }\n\n        return;\n      }\n\n      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n        this._activeTarget = null;\n\n        this._clear();\n\n        return;\n      }\n\n      for (let i = this._offsets.length; i--;) {\n        const isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this._activate(this._targets[i]);\n        }\n      }\n    }\n\n    _activate(target) {\n      this._activeTarget = target;\n\n      this._clear();\n\n      let queries = this._selector.split(','); // eslint-disable-next-line arrow-body-style\n\n\n      queries = queries.map(selector => {\n        return `${selector}[data-target=\"${target}\"],` + `${selector}[href=\"${target}\"]`;\n      });\n      const $link = $(queries.join(','));\n\n      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\n        $link.addClass(ClassName.ACTIVE);\n      } else {\n        // Set triggered link as active\n        $link.addClass(ClassName.ACTIVE); // Set triggered links parents as active\n        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n        $link.parents(Selector.NAV_LIST_GROUP).prev(`${Selector.NAV_LINKS}, ${Selector.LIST_ITEMS}`).addClass(ClassName.ACTIVE); // Handle special case when .nav-link is inside .nav-item\n\n        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\n      }\n\n      $(this._scrollElement).trigger(Event.ACTIVATE, {\n        relatedTarget: target\n      });\n    }\n\n    _clear() {\n      $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\n    } // Static\n\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let data = $(this).data(DATA_KEY);\n\n        const _config = typeof config === 'object' && config;\n\n        if (!data) {\n          data = new ScrollSpy(this, _config);\n          $(this).data(DATA_KEY, data);\n        }\n\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(`No method named \"${config}\"`);\n          }\n\n          data[config]();\n        }\n      });\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  $(window).on(Event.LOAD_DATA_API, () => {\n    const scrollSpys = $.makeArray($(Selector.DATA_SPY));\n\n    for (let i = scrollSpys.length; i--;) {\n      const $spy = $(scrollSpys[i]);\n\n      ScrollSpy._jQueryInterface.call($spy, $spy.data());\n    }\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = ScrollSpy._jQueryInterface;\n  $.fn[NAME].Constructor = ScrollSpy;\n\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return ScrollSpy._jQueryInterface;\n  };\n\n  return ScrollSpy;\n})($);\n\nexport default ScrollSpy;","map":{"version":3,"sources":["D:/React Projects/sample-app/node_modules/bootstrap/js/src/scrollspy.js"],"names":["$","Util","ScrollSpy","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","Default","offset","method","target","DefaultType","Event","ACTIVATE","SCROLL","LOAD_DATA_API","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","ACTIVE","Selector","DATA_SPY","NAV_LIST_GROUP","NAV_LINKS","NAV_ITEMS","LIST_ITEMS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","constructor","element","config","_element","_scrollElement","tagName","window","_config","_getConfig","_selector","_offsets","_targets","_activeTarget","_scrollHeight","on","event","_process","refresh","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","targets","makeArray","map","targetSelector","getSelectorFromElement","targetBCR","getBoundingClientRect","width","height","top","filter","item","sort","a","b","forEach","push","dispose","removeData","off","id","attr","getUID","typeCheckConfig","pageYOffset","scrollTop","scrollHeight","Math","max","document","body","documentElement","_getOffsetHeight","innerHeight","maxScroll","length","_activate","_clear","i","isActiveTarget","queries","split","selector","$link","join","hasClass","closest","find","addClass","parents","prev","children","trigger","relatedTarget","removeClass","_jQueryInterface","each","data","TypeError","scrollSpys","$spy","call","Constructor","noConflict"],"mappings":"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","sourcesContent":["import $ from 'jquery'\nimport Util from './util'\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.1.1): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst ScrollSpy = (($) => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME               = 'scrollspy'\n  const VERSION            = '4.1.1'\n  const DATA_KEY           = 'bs.scrollspy'\n  const EVENT_KEY          = `.${DATA_KEY}`\n  const DATA_API_KEY       = '.data-api'\n  const JQUERY_NO_CONFLICT = $.fn[NAME]\n\n  const Default = {\n    offset : 10,\n    method : 'auto',\n    target : ''\n  }\n\n  const DefaultType = {\n    offset : 'number',\n    method : 'string',\n    target : '(string|element)'\n  }\n\n  const Event = {\n    ACTIVATE      : `activate${EVENT_KEY}`,\n    SCROLL        : `scroll${EVENT_KEY}`,\n    LOAD_DATA_API : `load${EVENT_KEY}${DATA_API_KEY}`\n  }\n\n  const ClassName = {\n    DROPDOWN_ITEM : 'dropdown-item',\n    DROPDOWN_MENU : 'dropdown-menu',\n    ACTIVE        : 'active'\n  }\n\n  const Selector = {\n    DATA_SPY        : '[data-spy=\"scroll\"]',\n    ACTIVE          : '.active',\n    NAV_LIST_GROUP  : '.nav, .list-group',\n    NAV_LINKS       : '.nav-link',\n    NAV_ITEMS       : '.nav-item',\n    LIST_ITEMS      : '.list-group-item',\n    DROPDOWN        : '.dropdown',\n    DROPDOWN_ITEMS  : '.dropdown-item',\n    DROPDOWN_TOGGLE : '.dropdown-toggle'\n  }\n\n  const OffsetMethod = {\n    OFFSET   : 'offset',\n    POSITION : 'position'\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class ScrollSpy {\n    constructor(element, config) {\n      this._element       = element\n      this._scrollElement = element.tagName === 'BODY' ? window : element\n      this._config        = this._getConfig(config)\n      this._selector      = `${this._config.target} ${Selector.NAV_LINKS},` +\n                            `${this._config.target} ${Selector.LIST_ITEMS},` +\n                            `${this._config.target} ${Selector.DROPDOWN_ITEMS}`\n      this._offsets       = []\n      this._targets       = []\n      this._activeTarget  = null\n      this._scrollHeight  = 0\n\n      $(this._scrollElement).on(Event.SCROLL, (event) => this._process(event))\n\n      this.refresh()\n      this._process()\n    }\n\n    // Getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get Default() {\n      return Default\n    }\n\n    // Public\n\n    refresh() {\n      const autoMethod = this._scrollElement === this._scrollElement.window\n        ? OffsetMethod.OFFSET : OffsetMethod.POSITION\n\n      const offsetMethod = this._config.method === 'auto'\n        ? autoMethod : this._config.method\n\n      const offsetBase = offsetMethod === OffsetMethod.POSITION\n        ? this._getScrollTop() : 0\n\n      this._offsets = []\n      this._targets = []\n\n      this._scrollHeight = this._getScrollHeight()\n\n      const targets = $.makeArray($(this._selector))\n\n      targets\n        .map((element) => {\n          let target\n          const targetSelector = Util.getSelectorFromElement(element)\n\n          if (targetSelector) {\n            target = $(targetSelector)[0]\n          }\n\n          if (target) {\n            const targetBCR = target.getBoundingClientRect()\n            if (targetBCR.width || targetBCR.height) {\n              // TODO (fat): remove sketch reliance on jQuery position/offset\n              return [\n                $(target)[offsetMethod]().top + offsetBase,\n                targetSelector\n              ]\n            }\n          }\n          return null\n        })\n        .filter((item) => item)\n        .sort((a, b) => a[0] - b[0])\n        .forEach((item) => {\n          this._offsets.push(item[0])\n          this._targets.push(item[1])\n        })\n    }\n\n    dispose() {\n      $.removeData(this._element, DATA_KEY)\n      $(this._scrollElement).off(EVENT_KEY)\n\n      this._element       = null\n      this._scrollElement = null\n      this._config        = null\n      this._selector      = null\n      this._offsets       = null\n      this._targets       = null\n      this._activeTarget  = null\n      this._scrollHeight  = null\n    }\n\n    // Private\n\n    _getConfig(config) {\n      config = {\n        ...Default,\n        ...typeof config === 'object' && config ? config : {}\n      }\n\n      if (typeof config.target !== 'string') {\n        let id = $(config.target).attr('id')\n        if (!id) {\n          id = Util.getUID(NAME)\n          $(config.target).attr('id', id)\n        }\n        config.target = `#${id}`\n      }\n\n      Util.typeCheckConfig(NAME, config, DefaultType)\n\n      return config\n    }\n\n    _getScrollTop() {\n      return this._scrollElement === window\n        ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop\n    }\n\n    _getScrollHeight() {\n      return this._scrollElement.scrollHeight || Math.max(\n        document.body.scrollHeight,\n        document.documentElement.scrollHeight\n      )\n    }\n\n    _getOffsetHeight() {\n      return this._scrollElement === window\n        ? window.innerHeight : this._scrollElement.getBoundingClientRect().height\n    }\n\n    _process() {\n      const scrollTop    = this._getScrollTop() + this._config.offset\n      const scrollHeight = this._getScrollHeight()\n      const maxScroll    = this._config.offset +\n        scrollHeight -\n        this._getOffsetHeight()\n\n      if (this._scrollHeight !== scrollHeight) {\n        this.refresh()\n      }\n\n      if (scrollTop >= maxScroll) {\n        const target = this._targets[this._targets.length - 1]\n\n        if (this._activeTarget !== target) {\n          this._activate(target)\n        }\n        return\n      }\n\n      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n        this._activeTarget = null\n        this._clear()\n        return\n      }\n\n      for (let i = this._offsets.length; i--;) {\n        const isActiveTarget = this._activeTarget !== this._targets[i] &&\n            scrollTop >= this._offsets[i] &&\n            (typeof this._offsets[i + 1] === 'undefined' ||\n                scrollTop < this._offsets[i + 1])\n\n        if (isActiveTarget) {\n          this._activate(this._targets[i])\n        }\n      }\n    }\n\n    _activate(target) {\n      this._activeTarget = target\n\n      this._clear()\n\n      let queries = this._selector.split(',')\n      // eslint-disable-next-line arrow-body-style\n      queries = queries.map((selector) => {\n        return `${selector}[data-target=\"${target}\"],` +\n               `${selector}[href=\"${target}\"]`\n      })\n\n      const $link = $(queries.join(','))\n\n      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE)\n        $link.addClass(ClassName.ACTIVE)\n      } else {\n        // Set triggered link as active\n        $link.addClass(ClassName.ACTIVE)\n        // Set triggered links parents as active\n        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n        $link.parents(Selector.NAV_LIST_GROUP).prev(`${Selector.NAV_LINKS}, ${Selector.LIST_ITEMS}`).addClass(ClassName.ACTIVE)\n        // Handle special case when .nav-link is inside .nav-item\n        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE)\n      }\n\n      $(this._scrollElement).trigger(Event.ACTIVATE, {\n        relatedTarget: target\n      })\n    }\n\n    _clear() {\n      $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE)\n    }\n\n    // Static\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let data = $(this).data(DATA_KEY)\n        const _config = typeof config === 'object' && config\n\n        if (!data) {\n          data = new ScrollSpy(this, _config)\n          $(this).data(DATA_KEY, data)\n        }\n\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(`No method named \"${config}\"`)\n          }\n          data[config]()\n        }\n      })\n    }\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n  $(window).on(Event.LOAD_DATA_API, () => {\n    const scrollSpys = $.makeArray($(Selector.DATA_SPY))\n\n    for (let i = scrollSpys.length; i--;) {\n      const $spy = $(scrollSpys[i])\n      ScrollSpy._jQueryInterface.call($spy, $spy.data())\n    }\n  })\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = ScrollSpy._jQueryInterface\n  $.fn[NAME].Constructor = ScrollSpy\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return ScrollSpy._jQueryInterface\n  }\n\n  return ScrollSpy\n})($)\n\nexport default ScrollSpy\n"]},"metadata":{},"sourceType":"module"}