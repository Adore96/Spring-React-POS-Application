{"ast":null,"code":"import $ from 'jquery';\nimport Util from './util';\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.1.1): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst Carousel = ($ => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NAME = 'carousel';\n  const VERSION = '4.1.1';\n  const DATA_KEY = 'bs.carousel';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const JQUERY_NO_CONFLICT = $.fn[NAME];\n  const ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\n\n  const ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\n\n  const TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\n  const Default = {\n    interval: 5000,\n    keyboard: true,\n    slide: false,\n    pause: 'hover',\n    wrap: true\n  };\n  const DefaultType = {\n    interval: '(number|boolean)',\n    keyboard: 'boolean',\n    slide: '(boolean|string)',\n    pause: '(string|boolean)',\n    wrap: 'boolean'\n  };\n  const Direction = {\n    NEXT: 'next',\n    PREV: 'prev',\n    LEFT: 'left',\n    RIGHT: 'right'\n  };\n  const Event = {\n    SLIDE: `slide${EVENT_KEY}`,\n    SLID: `slid${EVENT_KEY}`,\n    KEYDOWN: `keydown${EVENT_KEY}`,\n    MOUSEENTER: `mouseenter${EVENT_KEY}`,\n    MOUSELEAVE: `mouseleave${EVENT_KEY}`,\n    TOUCHEND: `touchend${EVENT_KEY}`,\n    LOAD_DATA_API: `load${EVENT_KEY}${DATA_API_KEY}`,\n    CLICK_DATA_API: `click${EVENT_KEY}${DATA_API_KEY}`\n  };\n  const ClassName = {\n    CAROUSEL: 'carousel',\n    ACTIVE: 'active',\n    SLIDE: 'slide',\n    RIGHT: 'carousel-item-right',\n    LEFT: 'carousel-item-left',\n    NEXT: 'carousel-item-next',\n    PREV: 'carousel-item-prev',\n    ITEM: 'carousel-item'\n  };\n  const Selector = {\n    ACTIVE: '.active',\n    ACTIVE_ITEM: '.active.carousel-item',\n    ITEM: '.carousel-item',\n    NEXT_PREV: '.carousel-item-next, .carousel-item-prev',\n    INDICATORS: '.carousel-indicators',\n    DATA_SLIDE: '[data-slide], [data-slide-to]',\n    DATA_RIDE: '[data-ride=\"carousel\"]'\n  };\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Carousel {\n    constructor(element, config) {\n      this._items = null;\n      this._interval = null;\n      this._activeElement = null;\n      this._isPaused = false;\n      this._isSliding = false;\n      this.touchTimeout = null;\n      this._config = this._getConfig(config);\n      this._element = $(element)[0];\n      this._indicatorsElement = $(this._element).find(Selector.INDICATORS)[0];\n\n      this._addEventListeners();\n    } // Getters\n\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n    static get Default() {\n      return Default;\n    } // Public\n\n\n    next() {\n      if (!this._isSliding) {\n        this._slide(Direction.NEXT);\n      }\n    }\n\n    nextWhenVisible() {\n      // Don't call next when the page isn't visible\n      // or the carousel or its parent isn't visible\n      if (!document.hidden && $(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden') {\n        this.next();\n      }\n    }\n\n    prev() {\n      if (!this._isSliding) {\n        this._slide(Direction.PREV);\n      }\n    }\n\n    pause(event) {\n      if (!event) {\n        this._isPaused = true;\n      }\n\n      if ($(this._element).find(Selector.NEXT_PREV)[0]) {\n        Util.triggerTransitionEnd(this._element);\n        this.cycle(true);\n      }\n\n      clearInterval(this._interval);\n      this._interval = null;\n    }\n\n    cycle(event) {\n      if (!event) {\n        this._isPaused = false;\n      }\n\n      if (this._interval) {\n        clearInterval(this._interval);\n        this._interval = null;\n      }\n\n      if (this._config.interval && !this._isPaused) {\n        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n      }\n    }\n\n    to(index) {\n      this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\n\n      const activeIndex = this._getItemIndex(this._activeElement);\n\n      if (index > this._items.length - 1 || index < 0) {\n        return;\n      }\n\n      if (this._isSliding) {\n        $(this._element).one(Event.SLID, () => this.to(index));\n        return;\n      }\n\n      if (activeIndex === index) {\n        this.pause();\n        this.cycle();\n        return;\n      }\n\n      const direction = index > activeIndex ? Direction.NEXT : Direction.PREV;\n\n      this._slide(direction, this._items[index]);\n    }\n\n    dispose() {\n      $(this._element).off(EVENT_KEY);\n      $.removeData(this._element, DATA_KEY);\n      this._items = null;\n      this._config = null;\n      this._element = null;\n      this._interval = null;\n      this._isPaused = null;\n      this._isSliding = null;\n      this._activeElement = null;\n      this._indicatorsElement = null;\n    } // Private\n\n\n    _getConfig(config) {\n      config = { ...Default,\n        ...config\n      };\n      Util.typeCheckConfig(NAME, config, DefaultType);\n      return config;\n    }\n\n    _addEventListeners() {\n      if (this._config.keyboard) {\n        $(this._element).on(Event.KEYDOWN, event => this._keydown(event));\n      }\n\n      if (this._config.pause === 'hover') {\n        $(this._element).on(Event.MOUSEENTER, event => this.pause(event)).on(Event.MOUSELEAVE, event => this.cycle(event));\n\n        if ('ontouchstart' in document.documentElement) {\n          // If it's a touch-enabled device, mouseenter/leave are fired as\n          // part of the mouse compatibility events on first tap - the carousel\n          // would stop cycling until user tapped out of it;\n          // here, we listen for touchend, explicitly pause the carousel\n          // (as if it's the second time we tap on it, mouseenter compat event\n          // is NOT fired) and after a timeout (to allow for mouse compatibility\n          // events to fire) we explicitly restart cycling\n          $(this._element).on(Event.TOUCHEND, () => {\n            this.pause();\n\n            if (this.touchTimeout) {\n              clearTimeout(this.touchTimeout);\n            }\n\n            this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n          });\n        }\n      }\n    }\n\n    _keydown(event) {\n      if (/input|textarea/i.test(event.target.tagName)) {\n        return;\n      }\n\n      switch (event.which) {\n        case ARROW_LEFT_KEYCODE:\n          event.preventDefault();\n          this.prev();\n          break;\n\n        case ARROW_RIGHT_KEYCODE:\n          event.preventDefault();\n          this.next();\n          break;\n\n        default:\n      }\n    }\n\n    _getItemIndex(element) {\n      this._items = $.makeArray($(element).parent().find(Selector.ITEM));\n      return this._items.indexOf(element);\n    }\n\n    _getItemByDirection(direction, activeElement) {\n      const isNextDirection = direction === Direction.NEXT;\n      const isPrevDirection = direction === Direction.PREV;\n\n      const activeIndex = this._getItemIndex(activeElement);\n\n      const lastItemIndex = this._items.length - 1;\n      const isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n\n      if (isGoingToWrap && !this._config.wrap) {\n        return activeElement;\n      }\n\n      const delta = direction === Direction.PREV ? -1 : 1;\n      const itemIndex = (activeIndex + delta) % this._items.length;\n      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n    }\n\n    _triggerSlideEvent(relatedTarget, eventDirectionName) {\n      const targetIndex = this._getItemIndex(relatedTarget);\n\n      const fromIndex = this._getItemIndex($(this._element).find(Selector.ACTIVE_ITEM)[0]);\n\n      const slideEvent = $.Event(Event.SLIDE, {\n        relatedTarget,\n        direction: eventDirectionName,\n        from: fromIndex,\n        to: targetIndex\n      });\n      $(this._element).trigger(slideEvent);\n      return slideEvent;\n    }\n\n    _setActiveIndicatorElement(element) {\n      if (this._indicatorsElement) {\n        $(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\n\n        const nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n\n        if (nextIndicator) {\n          $(nextIndicator).addClass(ClassName.ACTIVE);\n        }\n      }\n    }\n\n    _slide(direction, element) {\n      const activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\n\n      const activeElementIndex = this._getItemIndex(activeElement);\n\n      const nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n\n      const nextElementIndex = this._getItemIndex(nextElement);\n\n      const isCycling = Boolean(this._interval);\n      let directionalClassName;\n      let orderClassName;\n      let eventDirectionName;\n\n      if (direction === Direction.NEXT) {\n        directionalClassName = ClassName.LEFT;\n        orderClassName = ClassName.NEXT;\n        eventDirectionName = Direction.LEFT;\n      } else {\n        directionalClassName = ClassName.RIGHT;\n        orderClassName = ClassName.PREV;\n        eventDirectionName = Direction.RIGHT;\n      }\n\n      if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n        this._isSliding = false;\n        return;\n      }\n\n      const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n\n      if (slideEvent.isDefaultPrevented()) {\n        return;\n      }\n\n      if (!activeElement || !nextElement) {\n        // Some weirdness is happening, so we bail\n        return;\n      }\n\n      this._isSliding = true;\n\n      if (isCycling) {\n        this.pause();\n      }\n\n      this._setActiveIndicatorElement(nextElement);\n\n      const slidEvent = $.Event(Event.SLID, {\n        relatedTarget: nextElement,\n        direction: eventDirectionName,\n        from: activeElementIndex,\n        to: nextElementIndex\n      });\n\n      if ($(this._element).hasClass(ClassName.SLIDE)) {\n        $(nextElement).addClass(orderClassName);\n        Util.reflow(nextElement);\n        $(activeElement).addClass(directionalClassName);\n        $(nextElement).addClass(directionalClassName);\n        const transitionDuration = Util.getTransitionDurationFromElement(activeElement);\n        $(activeElement).one(Util.TRANSITION_END, () => {\n          $(nextElement).removeClass(`${directionalClassName} ${orderClassName}`).addClass(ClassName.ACTIVE);\n          $(activeElement).removeClass(`${ClassName.ACTIVE} ${orderClassName} ${directionalClassName}`);\n          this._isSliding = false;\n          setTimeout(() => $(this._element).trigger(slidEvent), 0);\n        }).emulateTransitionEnd(transitionDuration);\n      } else {\n        $(activeElement).removeClass(ClassName.ACTIVE);\n        $(nextElement).addClass(ClassName.ACTIVE);\n        this._isSliding = false;\n        $(this._element).trigger(slidEvent);\n      }\n\n      if (isCycling) {\n        this.cycle();\n      }\n    } // Static\n\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let data = $(this).data(DATA_KEY);\n        let _config = { ...Default,\n          ...$(this).data()\n        };\n\n        if (typeof config === 'object') {\n          _config = { ..._config,\n            ...config\n          };\n        }\n\n        const action = typeof config === 'string' ? config : _config.slide;\n\n        if (!data) {\n          data = new Carousel(this, _config);\n          $(this).data(DATA_KEY, data);\n        }\n\n        if (typeof config === 'number') {\n          data.to(config);\n        } else if (typeof action === 'string') {\n          if (typeof data[action] === 'undefined') {\n            throw new TypeError(`No method named \"${action}\"`);\n          }\n\n          data[action]();\n        } else if (_config.interval) {\n          data.pause();\n          data.cycle();\n        }\n      });\n    }\n\n    static _dataApiClickHandler(event) {\n      const selector = Util.getSelectorFromElement(this);\n\n      if (!selector) {\n        return;\n      }\n\n      const target = $(selector)[0];\n\n      if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\n        return;\n      }\n\n      const config = { ...$(target).data(),\n        ...$(this).data()\n      };\n      const slideIndex = this.getAttribute('data-slide-to');\n\n      if (slideIndex) {\n        config.interval = false;\n      }\n\n      Carousel._jQueryInterface.call($(target), config);\n\n      if (slideIndex) {\n        $(target).data(DATA_KEY).to(slideIndex);\n      }\n\n      event.preventDefault();\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\n  $(window).on(Event.LOAD_DATA_API, () => {\n    $(Selector.DATA_RIDE).each(function () {\n      const $carousel = $(this);\n\n      Carousel._jQueryInterface.call($carousel, $carousel.data());\n    });\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Carousel._jQueryInterface;\n  $.fn[NAME].Constructor = Carousel;\n\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Carousel._jQueryInterface;\n  };\n\n  return Carousel;\n})($);\n\nexport default Carousel;","map":{"version":3,"sources":["D:/React Projects/sample-app/node_modules/bootstrap/js/src/carousel.js"],"names":["$","Util","Carousel","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","TOUCHEVENT_COMPAT_WAIT","Default","interval","keyboard","slide","pause","wrap","DefaultType","Direction","NEXT","PREV","LEFT","RIGHT","Event","SLIDE","SLID","KEYDOWN","MOUSEENTER","MOUSELEAVE","TOUCHEND","LOAD_DATA_API","CLICK_DATA_API","ClassName","CAROUSEL","ACTIVE","ITEM","Selector","ACTIVE_ITEM","NEXT_PREV","INDICATORS","DATA_SLIDE","DATA_RIDE","constructor","element","config","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","_config","_getConfig","_element","_indicatorsElement","find","_addEventListeners","next","_slide","nextWhenVisible","document","hidden","is","css","prev","event","triggerTransitionEnd","cycle","clearInterval","setInterval","visibilityState","bind","to","index","activeIndex","_getItemIndex","length","one","direction","dispose","off","removeData","typeCheckConfig","on","_keydown","documentElement","clearTimeout","setTimeout","test","target","tagName","which","preventDefault","makeArray","parent","indexOf","_getItemByDirection","activeElement","isNextDirection","isPrevDirection","lastItemIndex","isGoingToWrap","delta","itemIndex","_triggerSlideEvent","relatedTarget","eventDirectionName","targetIndex","fromIndex","slideEvent","from","trigger","_setActiveIndicatorElement","removeClass","nextIndicator","children","addClass","activeElementIndex","nextElement","nextElementIndex","isCycling","Boolean","directionalClassName","orderClassName","hasClass","isDefaultPrevented","slidEvent","reflow","transitionDuration","getTransitionDurationFromElement","TRANSITION_END","emulateTransitionEnd","_jQueryInterface","each","data","action","TypeError","_dataApiClickHandler","selector","getSelectorFromElement","slideIndex","getAttribute","call","window","$carousel","Constructor","noConflict"],"mappings":"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","sourcesContent":["import $ from 'jquery'\nimport Util from './util'\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.1.1): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst Carousel = (($) => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME                   = 'carousel'\n  const VERSION                = '4.1.1'\n  const DATA_KEY               = 'bs.carousel'\n  const EVENT_KEY              = `.${DATA_KEY}`\n  const DATA_API_KEY           = '.data-api'\n  const JQUERY_NO_CONFLICT     = $.fn[NAME]\n  const ARROW_LEFT_KEYCODE     = 37 // KeyboardEvent.which value for left arrow key\n  const ARROW_RIGHT_KEYCODE    = 39 // KeyboardEvent.which value for right arrow key\n  const TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\n\n  const Default = {\n    interval : 5000,\n    keyboard : true,\n    slide    : false,\n    pause    : 'hover',\n    wrap     : true\n  }\n\n  const DefaultType = {\n    interval : '(number|boolean)',\n    keyboard : 'boolean',\n    slide    : '(boolean|string)',\n    pause    : '(string|boolean)',\n    wrap     : 'boolean'\n  }\n\n  const Direction = {\n    NEXT     : 'next',\n    PREV     : 'prev',\n    LEFT     : 'left',\n    RIGHT    : 'right'\n  }\n\n  const Event = {\n    SLIDE          : `slide${EVENT_KEY}`,\n    SLID           : `slid${EVENT_KEY}`,\n    KEYDOWN        : `keydown${EVENT_KEY}`,\n    MOUSEENTER     : `mouseenter${EVENT_KEY}`,\n    MOUSELEAVE     : `mouseleave${EVENT_KEY}`,\n    TOUCHEND       : `touchend${EVENT_KEY}`,\n    LOAD_DATA_API  : `load${EVENT_KEY}${DATA_API_KEY}`,\n    CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n  }\n\n  const ClassName = {\n    CAROUSEL : 'carousel',\n    ACTIVE   : 'active',\n    SLIDE    : 'slide',\n    RIGHT    : 'carousel-item-right',\n    LEFT     : 'carousel-item-left',\n    NEXT     : 'carousel-item-next',\n    PREV     : 'carousel-item-prev',\n    ITEM     : 'carousel-item'\n  }\n\n  const Selector = {\n    ACTIVE      : '.active',\n    ACTIVE_ITEM : '.active.carousel-item',\n    ITEM        : '.carousel-item',\n    NEXT_PREV   : '.carousel-item-next, .carousel-item-prev',\n    INDICATORS  : '.carousel-indicators',\n    DATA_SLIDE  : '[data-slide], [data-slide-to]',\n    DATA_RIDE   : '[data-ride=\"carousel\"]'\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Carousel {\n    constructor(element, config) {\n      this._items              = null\n      this._interval           = null\n      this._activeElement      = null\n\n      this._isPaused           = false\n      this._isSliding          = false\n\n      this.touchTimeout        = null\n\n      this._config             = this._getConfig(config)\n      this._element            = $(element)[0]\n      this._indicatorsElement  = $(this._element).find(Selector.INDICATORS)[0]\n\n      this._addEventListeners()\n    }\n\n    // Getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get Default() {\n      return Default\n    }\n\n    // Public\n\n    next() {\n      if (!this._isSliding) {\n        this._slide(Direction.NEXT)\n      }\n    }\n\n    nextWhenVisible() {\n      // Don't call next when the page isn't visible\n      // or the carousel or its parent isn't visible\n      if (!document.hidden &&\n        ($(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden')) {\n        this.next()\n      }\n    }\n\n    prev() {\n      if (!this._isSliding) {\n        this._slide(Direction.PREV)\n      }\n    }\n\n    pause(event) {\n      if (!event) {\n        this._isPaused = true\n      }\n\n      if ($(this._element).find(Selector.NEXT_PREV)[0]) {\n        Util.triggerTransitionEnd(this._element)\n        this.cycle(true)\n      }\n\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    cycle(event) {\n      if (!event) {\n        this._isPaused = false\n      }\n\n      if (this._interval) {\n        clearInterval(this._interval)\n        this._interval = null\n      }\n\n      if (this._config.interval && !this._isPaused) {\n        this._interval = setInterval(\n          (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n          this._config.interval\n        )\n      }\n    }\n\n    to(index) {\n      this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0]\n\n      const activeIndex = this._getItemIndex(this._activeElement)\n\n      if (index > this._items.length - 1 || index < 0) {\n        return\n      }\n\n      if (this._isSliding) {\n        $(this._element).one(Event.SLID, () => this.to(index))\n        return\n      }\n\n      if (activeIndex === index) {\n        this.pause()\n        this.cycle()\n        return\n      }\n\n      const direction = index > activeIndex\n        ? Direction.NEXT\n        : Direction.PREV\n\n      this._slide(direction, this._items[index])\n    }\n\n    dispose() {\n      $(this._element).off(EVENT_KEY)\n      $.removeData(this._element, DATA_KEY)\n\n      this._items             = null\n      this._config            = null\n      this._element           = null\n      this._interval          = null\n      this._isPaused          = null\n      this._isSliding         = null\n      this._activeElement     = null\n      this._indicatorsElement = null\n    }\n\n    // Private\n\n    _getConfig(config) {\n      config = {\n        ...Default,\n        ...config\n      }\n      Util.typeCheckConfig(NAME, config, DefaultType)\n      return config\n    }\n\n    _addEventListeners() {\n      if (this._config.keyboard) {\n        $(this._element)\n          .on(Event.KEYDOWN, (event) => this._keydown(event))\n      }\n\n      if (this._config.pause === 'hover') {\n        $(this._element)\n          .on(Event.MOUSEENTER, (event) => this.pause(event))\n          .on(Event.MOUSELEAVE, (event) => this.cycle(event))\n        if ('ontouchstart' in document.documentElement) {\n          // If it's a touch-enabled device, mouseenter/leave are fired as\n          // part of the mouse compatibility events on first tap - the carousel\n          // would stop cycling until user tapped out of it;\n          // here, we listen for touchend, explicitly pause the carousel\n          // (as if it's the second time we tap on it, mouseenter compat event\n          // is NOT fired) and after a timeout (to allow for mouse compatibility\n          // events to fire) we explicitly restart cycling\n          $(this._element).on(Event.TOUCHEND, () => {\n            this.pause()\n            if (this.touchTimeout) {\n              clearTimeout(this.touchTimeout)\n            }\n            this.touchTimeout = setTimeout((event) => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n          })\n        }\n      }\n    }\n\n    _keydown(event) {\n      if (/input|textarea/i.test(event.target.tagName)) {\n        return\n      }\n\n      switch (event.which) {\n        case ARROW_LEFT_KEYCODE:\n          event.preventDefault()\n          this.prev()\n          break\n        case ARROW_RIGHT_KEYCODE:\n          event.preventDefault()\n          this.next()\n          break\n        default:\n      }\n    }\n\n    _getItemIndex(element) {\n      this._items = $.makeArray($(element).parent().find(Selector.ITEM))\n      return this._items.indexOf(element)\n    }\n\n    _getItemByDirection(direction, activeElement) {\n      const isNextDirection = direction === Direction.NEXT\n      const isPrevDirection = direction === Direction.PREV\n      const activeIndex     = this._getItemIndex(activeElement)\n      const lastItemIndex   = this._items.length - 1\n      const isGoingToWrap   = isPrevDirection && activeIndex === 0 ||\n                              isNextDirection && activeIndex === lastItemIndex\n\n      if (isGoingToWrap && !this._config.wrap) {\n        return activeElement\n      }\n\n      const delta     = direction === Direction.PREV ? -1 : 1\n      const itemIndex = (activeIndex + delta) % this._items.length\n\n      return itemIndex === -1\n        ? this._items[this._items.length - 1] : this._items[itemIndex]\n    }\n\n    _triggerSlideEvent(relatedTarget, eventDirectionName) {\n      const targetIndex = this._getItemIndex(relatedTarget)\n      const fromIndex = this._getItemIndex($(this._element).find(Selector.ACTIVE_ITEM)[0])\n      const slideEvent = $.Event(Event.SLIDE, {\n        relatedTarget,\n        direction: eventDirectionName,\n        from: fromIndex,\n        to: targetIndex\n      })\n\n      $(this._element).trigger(slideEvent)\n\n      return slideEvent\n    }\n\n    _setActiveIndicatorElement(element) {\n      if (this._indicatorsElement) {\n        $(this._indicatorsElement)\n          .find(Selector.ACTIVE)\n          .removeClass(ClassName.ACTIVE)\n\n        const nextIndicator = this._indicatorsElement.children[\n          this._getItemIndex(element)\n        ]\n\n        if (nextIndicator) {\n          $(nextIndicator).addClass(ClassName.ACTIVE)\n        }\n      }\n    }\n\n    _slide(direction, element) {\n      const activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0]\n      const activeElementIndex = this._getItemIndex(activeElement)\n      const nextElement   = element || activeElement &&\n        this._getItemByDirection(direction, activeElement)\n      const nextElementIndex = this._getItemIndex(nextElement)\n      const isCycling = Boolean(this._interval)\n\n      let directionalClassName\n      let orderClassName\n      let eventDirectionName\n\n      if (direction === Direction.NEXT) {\n        directionalClassName = ClassName.LEFT\n        orderClassName = ClassName.NEXT\n        eventDirectionName = Direction.LEFT\n      } else {\n        directionalClassName = ClassName.RIGHT\n        orderClassName = ClassName.PREV\n        eventDirectionName = Direction.RIGHT\n      }\n\n      if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\n        this._isSliding = false\n        return\n      }\n\n      const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n      if (slideEvent.isDefaultPrevented()) {\n        return\n      }\n\n      if (!activeElement || !nextElement) {\n        // Some weirdness is happening, so we bail\n        return\n      }\n\n      this._isSliding = true\n\n      if (isCycling) {\n        this.pause()\n      }\n\n      this._setActiveIndicatorElement(nextElement)\n\n      const slidEvent = $.Event(Event.SLID, {\n        relatedTarget: nextElement,\n        direction: eventDirectionName,\n        from: activeElementIndex,\n        to: nextElementIndex\n      })\n\n      if ($(this._element).hasClass(ClassName.SLIDE)) {\n        $(nextElement).addClass(orderClassName)\n\n        Util.reflow(nextElement)\n\n        $(activeElement).addClass(directionalClassName)\n        $(nextElement).addClass(directionalClassName)\n\n        const transitionDuration = Util.getTransitionDurationFromElement(activeElement)\n\n        $(activeElement)\n          .one(Util.TRANSITION_END, () => {\n            $(nextElement)\n              .removeClass(`${directionalClassName} ${orderClassName}`)\n              .addClass(ClassName.ACTIVE)\n\n            $(activeElement).removeClass(`${ClassName.ACTIVE} ${orderClassName} ${directionalClassName}`)\n\n            this._isSliding = false\n\n            setTimeout(() => $(this._element).trigger(slidEvent), 0)\n          })\n          .emulateTransitionEnd(transitionDuration)\n      } else {\n        $(activeElement).removeClass(ClassName.ACTIVE)\n        $(nextElement).addClass(ClassName.ACTIVE)\n\n        this._isSliding = false\n        $(this._element).trigger(slidEvent)\n      }\n\n      if (isCycling) {\n        this.cycle()\n      }\n    }\n\n    // Static\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        let data = $(this).data(DATA_KEY)\n        let _config = {\n          ...Default,\n          ...$(this).data()\n        }\n\n        if (typeof config === 'object') {\n          _config = {\n            ..._config,\n            ...config\n          }\n        }\n\n        const action = typeof config === 'string' ? config : _config.slide\n\n        if (!data) {\n          data = new Carousel(this, _config)\n          $(this).data(DATA_KEY, data)\n        }\n\n        if (typeof config === 'number') {\n          data.to(config)\n        } else if (typeof action === 'string') {\n          if (typeof data[action] === 'undefined') {\n            throw new TypeError(`No method named \"${action}\"`)\n          }\n          data[action]()\n        } else if (_config.interval) {\n          data.pause()\n          data.cycle()\n        }\n      })\n    }\n\n    static _dataApiClickHandler(event) {\n      const selector = Util.getSelectorFromElement(this)\n\n      if (!selector) {\n        return\n      }\n\n      const target = $(selector)[0]\n\n      if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\n        return\n      }\n\n      const config = {\n        ...$(target).data(),\n        ...$(this).data()\n      }\n      const slideIndex = this.getAttribute('data-slide-to')\n\n      if (slideIndex) {\n        config.interval = false\n      }\n\n      Carousel._jQueryInterface.call($(target), config)\n\n      if (slideIndex) {\n        $(target).data(DATA_KEY).to(slideIndex)\n      }\n\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n  $(document)\n    .on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler)\n\n  $(window).on(Event.LOAD_DATA_API, () => {\n    $(Selector.DATA_RIDE).each(function () {\n      const $carousel = $(this)\n      Carousel._jQueryInterface.call($carousel, $carousel.data())\n    })\n  })\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Carousel._jQueryInterface\n  $.fn[NAME].Constructor = Carousel\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return Carousel._jQueryInterface\n  }\n\n  return Carousel\n})($)\n\nexport default Carousel\n"]},"metadata":{},"sourceType":"module"}