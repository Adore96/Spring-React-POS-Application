{"ast":null,"code":"import $ from 'jquery';\nimport Util from './util';\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.1.1): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst Collapse = ($ => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n  const NAME = 'collapse';\n  const VERSION = '4.1.1';\n  const DATA_KEY = 'bs.collapse';\n  const EVENT_KEY = `.${DATA_KEY}`;\n  const DATA_API_KEY = '.data-api';\n  const JQUERY_NO_CONFLICT = $.fn[NAME];\n  const Default = {\n    toggle: true,\n    parent: ''\n  };\n  const DefaultType = {\n    toggle: 'boolean',\n    parent: '(string|element)'\n  };\n  const Event = {\n    SHOW: `show${EVENT_KEY}`,\n    SHOWN: `shown${EVENT_KEY}`,\n    HIDE: `hide${EVENT_KEY}`,\n    HIDDEN: `hidden${EVENT_KEY}`,\n    CLICK_DATA_API: `click${EVENT_KEY}${DATA_API_KEY}`\n  };\n  const ClassName = {\n    SHOW: 'show',\n    COLLAPSE: 'collapse',\n    COLLAPSING: 'collapsing',\n    COLLAPSED: 'collapsed'\n  };\n  const Dimension = {\n    WIDTH: 'width',\n    HEIGHT: 'height'\n  };\n  const Selector = {\n    ACTIVES: '.show, .collapsing',\n    DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n  };\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Collapse {\n    constructor(element, config) {\n      this._isTransitioning = false;\n      this._element = element;\n      this._config = this._getConfig(config);\n      this._triggerArray = $.makeArray($(`[data-toggle=\"collapse\"][href=\"#${element.id}\"],` + `[data-toggle=\"collapse\"][data-target=\"#${element.id}\"]`));\n      const tabToggles = $(Selector.DATA_TOGGLE);\n\n      for (let i = 0; i < tabToggles.length; i++) {\n        const elem = tabToggles[i];\n        const selector = Util.getSelectorFromElement(elem);\n\n        if (selector !== null && $(selector).filter(element).length > 0) {\n          this._selector = selector;\n\n          this._triggerArray.push(elem);\n        }\n      }\n\n      this._parent = this._config.parent ? this._getParent() : null;\n\n      if (!this._config.parent) {\n        this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n      }\n\n      if (this._config.toggle) {\n        this.toggle();\n      }\n    } // Getters\n\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n    static get Default() {\n      return Default;\n    } // Public\n\n\n    toggle() {\n      if ($(this._element).hasClass(ClassName.SHOW)) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n\n    show() {\n      if (this._isTransitioning || $(this._element).hasClass(ClassName.SHOW)) {\n        return;\n      }\n\n      let actives;\n      let activesData;\n\n      if (this._parent) {\n        actives = $.makeArray($(this._parent).find(Selector.ACTIVES).filter(`[data-parent=\"${this._config.parent}\"]`));\n\n        if (actives.length === 0) {\n          actives = null;\n        }\n      }\n\n      if (actives) {\n        activesData = $(actives).not(this._selector).data(DATA_KEY);\n\n        if (activesData && activesData._isTransitioning) {\n          return;\n        }\n      }\n\n      const startEvent = $.Event(Event.SHOW);\n      $(this._element).trigger(startEvent);\n\n      if (startEvent.isDefaultPrevented()) {\n        return;\n      }\n\n      if (actives) {\n        Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide');\n\n        if (!activesData) {\n          $(actives).data(DATA_KEY, null);\n        }\n      }\n\n      const dimension = this._getDimension();\n\n      $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n      this._element.style[dimension] = 0;\n\n      if (this._triggerArray.length > 0) {\n        $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n      }\n\n      this.setTransitioning(true);\n\n      const complete = () => {\n        $(this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);\n        this._element.style[dimension] = '';\n        this.setTransitioning(false);\n        $(this._element).trigger(Event.SHOWN);\n      };\n\n      const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n      const scrollSize = `scroll${capitalizedDimension}`;\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      this._element.style[dimension] = `${this._element[scrollSize]}px`;\n    }\n\n    hide() {\n      if (this._isTransitioning || !$(this._element).hasClass(ClassName.SHOW)) {\n        return;\n      }\n\n      const startEvent = $.Event(Event.HIDE);\n      $(this._element).trigger(startEvent);\n\n      if (startEvent.isDefaultPrevented()) {\n        return;\n      }\n\n      const dimension = this._getDimension();\n\n      this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;\n      Util.reflow(this._element);\n      $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);\n\n      if (this._triggerArray.length > 0) {\n        for (let i = 0; i < this._triggerArray.length; i++) {\n          const trigger = this._triggerArray[i];\n          const selector = Util.getSelectorFromElement(trigger);\n\n          if (selector !== null) {\n            const $elem = $(selector);\n\n            if (!$elem.hasClass(ClassName.SHOW)) {\n              $(trigger).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n            }\n          }\n        }\n      }\n\n      this.setTransitioning(true);\n\n      const complete = () => {\n        this.setTransitioning(false);\n        $(this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n      };\n\n      this._element.style[dimension] = '';\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element);\n      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n    }\n\n    setTransitioning(isTransitioning) {\n      this._isTransitioning = isTransitioning;\n    }\n\n    dispose() {\n      $.removeData(this._element, DATA_KEY);\n      this._config = null;\n      this._parent = null;\n      this._element = null;\n      this._triggerArray = null;\n      this._isTransitioning = null;\n    } // Private\n\n\n    _getConfig(config) {\n      config = { ...Default,\n        ...config\n      };\n      config.toggle = Boolean(config.toggle); // Coerce string values\n\n      Util.typeCheckConfig(NAME, config, DefaultType);\n      return config;\n    }\n\n    _getDimension() {\n      const hasWidth = $(this._element).hasClass(Dimension.WIDTH);\n      return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n    }\n\n    _getParent() {\n      let parent = null;\n\n      if (Util.isElement(this._config.parent)) {\n        parent = this._config.parent; // It's a jQuery object\n\n        if (typeof this._config.parent.jquery !== 'undefined') {\n          parent = this._config.parent[0];\n        }\n      } else {\n        parent = $(this._config.parent)[0];\n      }\n\n      const selector = `[data-toggle=\"collapse\"][data-parent=\"${this._config.parent}\"]`;\n      $(parent).find(selector).each((i, element) => {\n        this._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n      });\n      return parent;\n    }\n\n    _addAriaAndCollapsedClass(element, triggerArray) {\n      if (element) {\n        const isOpen = $(element).hasClass(ClassName.SHOW);\n\n        if (triggerArray.length > 0) {\n          $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n        }\n      }\n    } // Static\n\n\n    static _getTargetFromElement(element) {\n      const selector = Util.getSelectorFromElement(element);\n      return selector ? $(selector)[0] : null;\n    }\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        const $this = $(this);\n        let data = $this.data(DATA_KEY);\n        const _config = { ...Default,\n          ...$this.data(),\n          ...(typeof config === 'object' && config ? config : {})\n        };\n\n        if (!data && _config.toggle && /show|hide/.test(config)) {\n          _config.toggle = false;\n        }\n\n        if (!data) {\n          data = new Collapse(this, _config);\n          $this.data(DATA_KEY, data);\n        }\n\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(`No method named \"${config}\"`);\n          }\n\n          data[config]();\n        }\n      });\n    }\n\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n    if (event.currentTarget.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    const $trigger = $(this);\n    const selector = Util.getSelectorFromElement(this);\n    $(selector).each(function () {\n      const $target = $(this);\n      const data = $target.data(DATA_KEY);\n      const config = data ? 'toggle' : $trigger.data();\n\n      Collapse._jQueryInterface.call($target, config);\n    });\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Collapse._jQueryInterface;\n  $.fn[NAME].Constructor = Collapse;\n\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Collapse._jQueryInterface;\n  };\n\n  return Collapse;\n})($);\n\nexport default Collapse;","map":{"version":3,"sources":["D:/React Projects/sample-app/node_modules/bootstrap/js/src/collapse.js"],"names":["$","Util","Collapse","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","Default","toggle","parent","DefaultType","Event","SHOW","SHOWN","HIDE","HIDDEN","CLICK_DATA_API","ClassName","COLLAPSE","COLLAPSING","COLLAPSED","Dimension","WIDTH","HEIGHT","Selector","ACTIVES","DATA_TOGGLE","constructor","element","config","_isTransitioning","_element","_config","_getConfig","_triggerArray","makeArray","id","tabToggles","i","length","elem","selector","getSelectorFromElement","filter","_selector","push","_parent","_getParent","_addAriaAndCollapsedClass","hasClass","hide","show","actives","activesData","find","not","data","startEvent","trigger","isDefaultPrevented","_jQueryInterface","call","dimension","_getDimension","removeClass","addClass","style","attr","setTransitioning","complete","capitalizedDimension","toUpperCase","slice","scrollSize","transitionDuration","getTransitionDurationFromElement","one","TRANSITION_END","emulateTransitionEnd","getBoundingClientRect","reflow","$elem","isTransitioning","dispose","removeData","Boolean","typeCheckConfig","hasWidth","isElement","jquery","each","_getTargetFromElement","triggerArray","isOpen","toggleClass","$this","test","TypeError","document","on","event","currentTarget","tagName","preventDefault","$trigger","$target","Constructor","noConflict"],"mappings":"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","sourcesContent":["import $ from 'jquery'\nimport Util from './util'\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.1.1): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst Collapse = (($) => {\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME                = 'collapse'\n  const VERSION             = '4.1.1'\n  const DATA_KEY            = 'bs.collapse'\n  const EVENT_KEY           = `.${DATA_KEY}`\n  const DATA_API_KEY        = '.data-api'\n  const JQUERY_NO_CONFLICT  = $.fn[NAME]\n\n  const Default = {\n    toggle : true,\n    parent : ''\n  }\n\n  const DefaultType = {\n    toggle : 'boolean',\n    parent : '(string|element)'\n  }\n\n  const Event = {\n    SHOW           : `show${EVENT_KEY}`,\n    SHOWN          : `shown${EVENT_KEY}`,\n    HIDE           : `hide${EVENT_KEY}`,\n    HIDDEN         : `hidden${EVENT_KEY}`,\n    CLICK_DATA_API : `click${EVENT_KEY}${DATA_API_KEY}`\n  }\n\n  const ClassName = {\n    SHOW       : 'show',\n    COLLAPSE   : 'collapse',\n    COLLAPSING : 'collapsing',\n    COLLAPSED  : 'collapsed'\n  }\n\n  const Dimension = {\n    WIDTH  : 'width',\n    HEIGHT : 'height'\n  }\n\n  const Selector = {\n    ACTIVES     : '.show, .collapsing',\n    DATA_TOGGLE : '[data-toggle=\"collapse\"]'\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class Collapse {\n    constructor(element, config) {\n      this._isTransitioning = false\n      this._element         = element\n      this._config          = this._getConfig(config)\n      this._triggerArray    = $.makeArray($(\n        `[data-toggle=\"collapse\"][href=\"#${element.id}\"],` +\n        `[data-toggle=\"collapse\"][data-target=\"#${element.id}\"]`\n      ))\n      const tabToggles = $(Selector.DATA_TOGGLE)\n      for (let i = 0; i < tabToggles.length; i++) {\n        const elem = tabToggles[i]\n        const selector = Util.getSelectorFromElement(elem)\n        if (selector !== null && $(selector).filter(element).length > 0) {\n          this._selector = selector\n          this._triggerArray.push(elem)\n        }\n      }\n\n      this._parent = this._config.parent ? this._getParent() : null\n\n      if (!this._config.parent) {\n        this._addAriaAndCollapsedClass(this._element, this._triggerArray)\n      }\n\n      if (this._config.toggle) {\n        this.toggle()\n      }\n    }\n\n    // Getters\n\n    static get VERSION() {\n      return VERSION\n    }\n\n    static get Default() {\n      return Default\n    }\n\n    // Public\n\n    toggle() {\n      if ($(this._element).hasClass(ClassName.SHOW)) {\n        this.hide()\n      } else {\n        this.show()\n      }\n    }\n\n    show() {\n      if (this._isTransitioning ||\n        $(this._element).hasClass(ClassName.SHOW)) {\n        return\n      }\n\n      let actives\n      let activesData\n\n      if (this._parent) {\n        actives = $.makeArray(\n          $(this._parent)\n            .find(Selector.ACTIVES)\n            .filter(`[data-parent=\"${this._config.parent}\"]`)\n        )\n        if (actives.length === 0) {\n          actives = null\n        }\n      }\n\n      if (actives) {\n        activesData = $(actives).not(this._selector).data(DATA_KEY)\n        if (activesData && activesData._isTransitioning) {\n          return\n        }\n      }\n\n      const startEvent = $.Event(Event.SHOW)\n      $(this._element).trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) {\n        return\n      }\n\n      if (actives) {\n        Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide')\n        if (!activesData) {\n          $(actives).data(DATA_KEY, null)\n        }\n      }\n\n      const dimension = this._getDimension()\n\n      $(this._element)\n        .removeClass(ClassName.COLLAPSE)\n        .addClass(ClassName.COLLAPSING)\n\n      this._element.style[dimension] = 0\n\n      if (this._triggerArray.length > 0) {\n        $(this._triggerArray)\n          .removeClass(ClassName.COLLAPSED)\n          .attr('aria-expanded', true)\n      }\n\n      this.setTransitioning(true)\n\n      const complete = () => {\n        $(this._element)\n          .removeClass(ClassName.COLLAPSING)\n          .addClass(ClassName.COLLAPSE)\n          .addClass(ClassName.SHOW)\n\n        this._element.style[dimension] = ''\n\n        this.setTransitioning(false)\n\n        $(this._element).trigger(Event.SHOWN)\n      }\n\n      const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n      const scrollSize = `scroll${capitalizedDimension}`\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n      $(this._element)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n\n      this._element.style[dimension] = `${this._element[scrollSize]}px`\n    }\n\n    hide() {\n      if (this._isTransitioning ||\n        !$(this._element).hasClass(ClassName.SHOW)) {\n        return\n      }\n\n      const startEvent = $.Event(Event.HIDE)\n      $(this._element).trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) {\n        return\n      }\n\n      const dimension = this._getDimension()\n\n      this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n      Util.reflow(this._element)\n\n      $(this._element)\n        .addClass(ClassName.COLLAPSING)\n        .removeClass(ClassName.COLLAPSE)\n        .removeClass(ClassName.SHOW)\n\n      if (this._triggerArray.length > 0) {\n        for (let i = 0; i < this._triggerArray.length; i++) {\n          const trigger = this._triggerArray[i]\n          const selector = Util.getSelectorFromElement(trigger)\n          if (selector !== null) {\n            const $elem = $(selector)\n            if (!$elem.hasClass(ClassName.SHOW)) {\n              $(trigger).addClass(ClassName.COLLAPSED)\n                .attr('aria-expanded', false)\n            }\n          }\n        }\n      }\n\n      this.setTransitioning(true)\n\n      const complete = () => {\n        this.setTransitioning(false)\n        $(this._element)\n          .removeClass(ClassName.COLLAPSING)\n          .addClass(ClassName.COLLAPSE)\n          .trigger(Event.HIDDEN)\n      }\n\n      this._element.style[dimension] = ''\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n      $(this._element)\n        .one(Util.TRANSITION_END, complete)\n        .emulateTransitionEnd(transitionDuration)\n    }\n\n    setTransitioning(isTransitioning) {\n      this._isTransitioning = isTransitioning\n    }\n\n    dispose() {\n      $.removeData(this._element, DATA_KEY)\n\n      this._config          = null\n      this._parent          = null\n      this._element         = null\n      this._triggerArray    = null\n      this._isTransitioning = null\n    }\n\n    // Private\n\n    _getConfig(config) {\n      config = {\n        ...Default,\n        ...config\n      }\n      config.toggle = Boolean(config.toggle) // Coerce string values\n      Util.typeCheckConfig(NAME, config, DefaultType)\n      return config\n    }\n\n    _getDimension() {\n      const hasWidth = $(this._element).hasClass(Dimension.WIDTH)\n      return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT\n    }\n\n    _getParent() {\n      let parent = null\n      if (Util.isElement(this._config.parent)) {\n        parent = this._config.parent\n\n        // It's a jQuery object\n        if (typeof this._config.parent.jquery !== 'undefined') {\n          parent = this._config.parent[0]\n        }\n      } else {\n        parent = $(this._config.parent)[0]\n      }\n\n      const selector =\n        `[data-toggle=\"collapse\"][data-parent=\"${this._config.parent}\"]`\n\n      $(parent).find(selector).each((i, element) => {\n        this._addAriaAndCollapsedClass(\n          Collapse._getTargetFromElement(element),\n          [element]\n        )\n      })\n\n      return parent\n    }\n\n    _addAriaAndCollapsedClass(element, triggerArray) {\n      if (element) {\n        const isOpen = $(element).hasClass(ClassName.SHOW)\n\n        if (triggerArray.length > 0) {\n          $(triggerArray)\n            .toggleClass(ClassName.COLLAPSED, !isOpen)\n            .attr('aria-expanded', isOpen)\n        }\n      }\n    }\n\n    // Static\n\n    static _getTargetFromElement(element) {\n      const selector = Util.getSelectorFromElement(element)\n      return selector ? $(selector)[0] : null\n    }\n\n    static _jQueryInterface(config) {\n      return this.each(function () {\n        const $this   = $(this)\n        let data      = $this.data(DATA_KEY)\n        const _config = {\n          ...Default,\n          ...$this.data(),\n          ...typeof config === 'object' && config ? config : {}\n        }\n\n        if (!data && _config.toggle && /show|hide/.test(config)) {\n          _config.toggle = false\n        }\n\n        if (!data) {\n          data = new Collapse(this, _config)\n          $this.data(DATA_KEY, data)\n        }\n\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(`No method named \"${config}\"`)\n          }\n          data[config]()\n        }\n      })\n    }\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n    if (event.currentTarget.tagName === 'A') {\n      event.preventDefault()\n    }\n\n    const $trigger = $(this)\n    const selector = Util.getSelectorFromElement(this)\n    $(selector).each(function () {\n      const $target = $(this)\n      const data    = $target.data(DATA_KEY)\n      const config  = data ? 'toggle' : $trigger.data()\n      Collapse._jQueryInterface.call($target, config)\n    })\n  })\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Collapse._jQueryInterface\n  $.fn[NAME].Constructor = Collapse\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return Collapse._jQueryInterface\n  }\n\n  return Collapse\n})($)\n\nexport default Collapse\n"]},"metadata":{},"sourceType":"module"}